// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(uuid())
  username      String        @unique
  email         String        @unique
  password      String
  isVerified    Boolean       @default(false)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  sentMessages  ChatMessage[] @relation("SentMessages")
  receivedMessages ChatMessage[] @relation("ReceivedMessages")
  reportsMade   Report[]      @relation("ReportsMade")
  reportsReceived Report[]    @relation("ReportsReceived")
}

model ChatMessage {
  id          String      @id @default(uuid())
  content     String
  senderId    String
  receiverId  String
  isRead      Boolean     @default(false)
  createdAt   DateTime    @default(now())
  sender      User        @relation("SentMessages", fields: [senderId], references: [id])
  receiver    User        @relation("ReceivedMessages", fields: [receiverId], references: [id])

  @@index([senderId])
  @@index([receiverId])
}

model Report {
  id          String      @id @default(uuid())
  reason      String
  reporterId  String
  reportedId  String
  createdAt   DateTime    @default(now())
  status      ReportStatus @default(PENDING)
  reporter    User        @relation("ReportsMade", fields: [reporterId], references: [id])
  reported    User        @relation("ReportsReceived", fields: [reportedId], references: [id])

  @@index([reporterId])
  @@index([reportedId])
}

enum ReportStatus {
  PENDING
  RESOLVED
  DISMISSED
} 